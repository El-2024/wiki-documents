# Cursor 规则：修复 Docusaurus 锚点链接问题

## 概述

当 yarn build 出现 "Broken anchor" 警告时，按照以下规则自动修复锚点链接问题，每次处理10个文件。

**警告类型**：

- **文档内锚点**：`[文字](#anchor-id)` - 需要在当前文档中查找锚点
- **跨文档锚点**：`[文字](/slug#anchor-id)` 或 `[文字](page#anchor-id)` - 需要在目标文档中查找锚点
- **擅自添加新标题来存放锚点**
- **擅自添加锚点来对应缺失的锚点**

## 重要注意事项

### 不要破坏文档结构

- **绝不在段落中间创建新标题**：这会导致 MDX 编译错误
- **保持原有内容的逻辑结构**：锚点修复不应改变文档的语义结构
- **优先考虑将锚点移动到现有标题**：而不是创建新标题

### 段落中锚点的正确处理方式

```markdown
# 错误做法（会导致编译错误）
段落内容 <span id="anchor">更多内容</span> 继续内容
↓ 错误转换 ↓
段落内容 
### 新标题 {#anchor}
更多内容 继续内容

# 正确做法
## 上级标题 {#anchor}
段落内容 更多内容 继续内容
```

## 规则1：转换 HTML 锚点为 Markdown 标题锚点

### 问题模式

```
- Broken anchor on source page path = /page-name/:
   -> linking to #anchor-id (resolved as: /page-name/#anchor-id)
```

### 执行步骤

1. **查找文档中的锚点定义**：搜索 `<span id="anchor-id">` 或 `<a id="anchor-id">`
2. **确认锚点存在**：如果找到锚点定义，进行格式转换
3. **根据锚点位置选择转换策略**：
   - 在标题中：直接转换为 `{#anchor-id}`
   - 在段落中：优先移动到最近的标题，或使用 `<a id="anchor-id"></a>` 格式
   - 独立存在：转换为标题锚点
4. **保留所有指向该锚点的跳转链接**：不要删除 `[文字](#anchor-id)` 这样的跳转

### 转换示例

**情况1：锚点在标题中**

```markdown
# 修复前
### 4. <span id="image">Display image</span>

# 修复后  
### 4. Display image {#image}
```

**情况2：锚点在段落中**

不做改动。

**情况3：独立锚点标签**

```markdown
# 修复前
<span id="Q5"></span>
#### Q5: ePaper Panel can't connect?

# 修复后
#### Q5: ePaper Panel can't connect to your computer? {#Q5}
```

## 规则2：处理不存在的锚点（重要）

### 执行步骤

1. **从警告中提取锚点ID和目标路径**
2. **区分锚点类型**：
   - **文档内锚点**：`[文字](#锚点ID)` 或 `[文字](当前页面#锚点ID)`
   - **跨文档锚点**：`[文字](/slug#锚点ID)` 或 `[文字](其他页面#锚点ID)`
3. **针对不同类型进行检查**：
   - **文档内锚点**：在当前文档中搜索锚点定义
   - **跨文档锚点**：在目标文档（通过slug或文件名确定）中搜索锚点定义
4. **判断锚点是否存在**：
   - **如果找到锚点定义**：只转换格式，保留所有跳转链接
   - **如果未找到锚点定义**：删除锚点部分，保留文档链接

### 跨文档锚点检查方法

1. **提取目标文档标识**：从链接中提取slug（如`/XIAO_ESP32C3_Getting_Started`）
2. **查找目标文档**：搜索frontmatter中`slug: /XIAO_ESP32C3_Getting_Started`的文件
3. **在目标文档中搜索锚点**：
   - 搜索标题：`### Software Setup` → 自动生成锚点 `software-setup`
   - 搜索手动锚点：`{#software-setup}`、`<span id="software-setup">`
4. **处理结果**：
   - **锚点存在**：保留完整链接 `[文字](/slug#锚点ID)`
   - **锚点不存在**：删除锚点部分 `[文字](/slug#锚点ID)` → `[文字](/slug)`

### 删除不存在锚点的跳转示例

**文档内锚点（仅当锚点定义不存在时才执行）：**

```markdown
# 修复前（假设 #missing-anchor 在当前文档中不存在）
请参考 [这个部分](#missing-anchor) 了解详情。

# 修复后
请参考这个部分了解详情。
```

**跨文档锚点（仅当目标文档中锚点不存在时才执行）：**

```markdown
# 修复前（假设 /XIAO_ESP32C3_Getting_Started 文档中没有 software-setup 标题）
If you want to use **Seeed Studio XIAO ESP32C3** for the later routines, please refer to **[this tutorial](/XIAO_ESP32C3_Getting_Started#software-setup)** to finish adding.

# 修复后（删除不存在的锚点，保留文档链接）
If you want to use **Seeed Studio XIAO ESP32C3** for the later routines, please refer to **[this tutorial](/XIAO_ESP32C3_Getting_Started)** to finish adding.
```

**其他跨文档示例：**

```markdown
# 修复前（假设目标文档中锚点不存在）
你也可以查看 [指南](guide#missing-section)。

# 修复后
你也可以查看 [指南](guide)。
```

## 规则3：保护现有的有效跳转

### 重要提醒

- **绝不删除指向存在锚点的跳转链接**
- 只修复锚点定义的格式，保持功能不变
- 跳转链接 `[文字](#anchor-id)` 应该保持原样

### 正确处理示例

**有效锚点的处理：**

```markdown
# 修复前
### 3. <span id="ttf">Display icon</span>

在后面的文档中：[点击这里](#ttf) 查看图标显示方法。

# 修复后
### 3. Display icon {#ttf}

在后面的文档中：[点击这里](#ttf) 查看图标显示方法。  # 保留跳转链接
```

## 执行流程

### 步骤1：分析警告信息

从 yarn build 警告中提取：

- 页面路径
- 锚点ID（#后面的部分）

### 步骤2：检查锚点是否存在

**对于文档内锚点**，在当前文档中搜索以下模式：

```
<span id="锚点ID">
<a id="锚点ID">
{#锚点ID}
### 标题内容 {#锚点ID}
```

**对于跨文档锚点**，需要两步操作：

1. **查找目标文档**：
   - 提取slug（如 `/XIAO_ESP32C3_Getting_Started`）
   - 搜索frontmatter中含有 `slug: /XIAO_ESP32C3_Getting_Started` 的文件
   - 或者根据文件路径约定查找对应文件

2. **在目标文档中搜索锚点**：
   - 搜索 `<span id="锚点ID">`、`<a id="锚点ID">`、`{#锚点ID}`
   - 搜索标题：将锚点ID转换为标题格式进行匹配
     - `software-setup` → 查找 `Software Setup`、`software setup`、`Software-Setup` 等标题
     - Docusaurus会自动为标题生成对应的锚点ID

### 步骤3：决定处理方式

- **文档内锚点存在**：
  1. **如果锚点在标题中**：将 HTML 锚点转换为 `{#锚点ID}` 格式
  2. **如果锚点在段落中**：
     - 优先：查找最近的上级标题，将锚点ID添加到该标题
     - 备选：保持HTML格式但使用 `<a id="锚点ID"></a>` 语法
     - 避免：不要在段落中间创建新标题
  3. 保留所有 `[文字](#锚点ID)` 跳转链接

- **跨文档锚点存在**：
  1. 保留完整的跨文档链接 `[文字](/slug#锚点ID)`
  2. 如果目标文档中的锚点需要格式修复，按规则1处理目标文档
  
- **锚点不存在（文档内或跨文档）**：
  1. **文档内**：删除 `[文字](#锚点ID)` 引用，只保留文字部分
  2. **跨文档**：删除锚点部分 `[文字](/slug#锚点ID)` → `[文字](/slug)`
  3. **其他页面**：删除锚点部分 `[文字](页面#锚点ID)` → `[文字](页面)`

### 步骤4：验证修复

确保：

- 有效的跳转链接被保留
- 无效的跳转被清理
- 锚点格式符合 Docusaurus 标准
- 运行 yarn build 确认是否修复成功，之后将多语言文档按照同样的情况修复，完成后重复上述流程

## 常见转换模式

### HTML 到 Markdown 转换表

| HTML 格式 | Markdown 格式 |
|-----------|---------------|
| `<span id="anchor">文字</span>` | 创建标题 `### 文字 {#anchor}` |
| `<a id="anchor"></a>` | 在最近的标题添加 `{#anchor}` |
| `文字<span id="anchor">更多文字</span>` | 创建标题 `### 相关标题 {#anchor}` |

## 调试检查清单

修复完成后验证：

- [ ] 所有警告中的锚点ID都已处理
- [ ] **文档内锚点**：存在的锚点转换为了 `{#id}` 格式或正确的HTML格式
- [ ] **跨文档锚点**：验证目标文档中锚点是否存在
- [ ] 有效的跳转链接 `[文字](#id)` 和 `[文字](/slug#id)` 被保留
- [ ] 无效的锚点部分被删除：`[文字](/slug#missing)` → `[文字](/slug)`
- [ ] **文档结构完整**：没有在段落中间创建标题
- [ ] **MDX 编译通过**：运行 `yarn build` 没有语法错误
- [ ] 不再有 broken anchor 警告
- [ ] **跨文档链接功能正常**：点击链接能正确跳转到目标文档

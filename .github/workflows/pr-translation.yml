name: PR Translation Workflow

on:
  pull_request:
    types: [opened, synchronize, labeled, closed]
    paths: ['docs/**']
  pull_request_target:
    types: [opened, synchronize, labeled]
    paths: ['docs/**']
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  # -------- 评论提示：非 fork 统计 + 评论 --------
  detect-docs-changes:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      has-docs-changes: ${{ steps.changes.outputs.any_changed }}
      total-files: ${{ steps.analyze.outputs.total_files }}
      operation-summary: ${{ steps.analyze.outputs.operation_summary }}
      skip-comment: ${{ steps.check-skip.outputs.skip }}
    steps:
      - name: Check if should skip
        id: check-skip
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.payload.pull_request?.head?.sha;
            try {
              if (sha) {
                const { data: commit } = await github.rest.repos.getCommit({ ...context.repo, ref: sha });
                const msg = commit.commit.message || '';
                if (msg.includes('🌍 自动翻译文档') || msg.includes('🔄 撤回翻译')) {
                  core.setOutput('skip', 'true'); return;
                }
              }
            } catch(e) { core.warning(`check commit failed: ${e.message}`); }
            core.setOutput('skip', 'false');

      - uses: actions/checkout@v4
        if: steps.check-skip.outputs.skip != 'true'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
          # filter: blob:none

      - name: Check for docs changes
        id: changes
        if: steps.check-skip.outputs.skip != 'true'
        uses: tj-actions/changed-files@v40
        with:
          files: |
            docs/**/*.{md,mdx}
            docs/**/_category_.yml
          files_ignore: |
            docs/zh-CN/**
            docs/ja/**
            docs/Spanish/**

      - name: Analyze changes
        id: analyze
        if: steps.changes.outputs.any_changed == 'true' && steps.check-skip.outputs.skip != 'true'
        run: |
          base_sha="${{ github.event.pull_request.base.sha }}"
          added=0; modified=0; deleted=0; renamed=0; renamed_mod=0
          if operations=$(git diff --name-status --find-renames=90 $base_sha..HEAD -- docs/ 2>/dev/null); then
            filtered=$(echo "$operations" | grep -E '\.(md|mdx)$|_category_\.yml$' | grep -v -E '(zh-CN|ja|Spanish)' || true)
            if [[ -n "$filtered" ]]; then
              while IFS=$'\t' read -r st file rest || [[ -n "$st" ]]; do
                [[ -z "$st" ]] && continue
                case "$st" in
                  A*) ((added++)) ;;
                  M*) ((modified++)) ;;
                  D*) ((deleted++)) ;;
                  R[0-9][0-9]) sim=${st#R}; if [ "$sim" -lt 100 ]; then ((renamed_mod++)); else ((renamed++)); fi ;;
                  R*) ((renamed++)) ;;
                esac
              done <<< "$filtered"
            fi
          fi
          total=$((added+modified+deleted+renamed+renamed_mod))
          echo "total_files=$total" >> $GITHUB_OUTPUT
          echo "operation_summary=新增:$added 修改:$modified 删除:$deleted 移动:$renamed 移动+修改:$renamed_mod" >> $GITHUB_OUTPUT

  add-translation-comment:
    needs: detect-docs-changes
    if: |
      github.event_name == 'pull_request' &&
      github.event.pull_request.head.repo.fork == false &&
      needs.detect-docs-changes.outputs.has-docs-changes == 'true' &&
      needs.detect-docs-changes.outputs.skip-comment != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Add translation comment (internal PR)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const pr = context.payload.pull_request;
            const total = '${{ needs.detect-docs-changes.outputs.total-files }}';
            const summary = '${{ needs.detect-docs-changes.outputs.operation-summary }}';
            let body = `## 🌍 检测到文档变更 - 可进行多语言翻译\n\n`;
            body += `**统计信息:** 共 ${total} 个文件需要处理\n`;
            body += `**操作类型:** ${summary}\n\n`;
            body += `### 🚀 开始翻译\n回复：\`/translate all|zh|ja|es ...\`\n\n`;
            body += `### 🔄 撤回翻译\n回复：\`/rollback translation\`\n\n`;
            body += `> 💡 提示: 翻译耗时与文件数近似线性`;
            await github.rest.issues.createComment({ owner, repo, issue_number: pr.number, body });

  # -------- 评论提示：fork PR（安全，不 checkout PR 代码） --------
  add-translation-comment-target:
    if: github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    steps:
      - name: Comment with stats (fork-safe; no checkout)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const pr = context.payload.pull_request;
            const files = await github.paginate(github.rest.pulls.listFiles, { owner, repo, pull_number: pr.number, per_page: 100 });
            const wanted = files.filter(f => {
              const p=f.filename, inDocs=p.startsWith('docs/'),
                    okExt=/\.(md|mdx)$/.test(p)||/_category_\.yml$/.test(p),
                    ex=/(^|\/)(zh-CN|ja|Spanish)(\/|$)/.test(p);
              return inDocs && okExt && !ex;
            });
            let a=0,m=0,d=0,r=0; wanted.forEach(f=>{ if(f.status==='added')a++; else if(f.status==='modified')m++; else if(f.status==='removed')d++; else if(f.status==='renamed')r++; });
            const total=a+m+d+r;
            const summary=`新增:${a} 修改:${m} 删除:${d} 移动:${r} 移动+修改:0`;
            let body = `## 🌍 检测到文档变更 - 可进行多语言翻译\n\n`;
            body += `**统计信息:** 共 ${total} 个文件需要处理\n`;
            body += `**操作类型:** ${summary}\n\n`;
            body += `### 🚀 开始翻译\n回复：\`/translate all|zh|ja|es ...\`\n（来自 fork 的 PR 将由维护者机器人直接推到你的 PR 分支，需要勾选 **Allow edits by maintainers**）\n\n`;
            body += `### 🔄 撤回翻译\n回复：\`/rollback translation\`\n\n`;
            await github.rest.issues.createComment({ owner, repo, issue_number: pr.number, body });

  # -------- 手动翻译（同仓库分支） --------
  manual-translate-internal:
    if: |
      github.event_name == 'issue_comment' &&
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '/translate')
    runs-on: ubuntu-latest
    steps:
      - name: Get PR info
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const { data: pr } = await github.rest.pulls.get({ owner, repo, pull_number: context.payload.issue.number });
            core.setOutput('is_fork', String(pr.head.repo.full_name !== `${owner}/${repo}`));
            core.setOutput('base_ref', pr.base.ref);
            core.setOutput('head_ref', pr.head.ref);
      - name: Stop if this is a fork (handled by separate job)
        if: steps.pr.outputs.is_fork == 'true'
        run: echo "Fork PR will be handled by manual-translate-fork" && exit 0

      - name: Check permission of commenter
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo, user=context.payload.comment.user.login;
            const { data: p } = await github.rest.repos.getCollaboratorPermissionLevel({ owner, repo, username:user });
            if (!['admin','maintain'].includes(p.permission)) {
              await github.rest.issues.createComment({ owner, repo, issue_number: context.payload.issue.number, body:`❌ @${user} 权限不足（需要 admin/maintain）`});
              core.setFailed('no permission');
            }

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Parse translation command
        id: parse
        run: |
          c="${{ github.event.comment.body }}"
          if [[ "$c" == *"/translate all"* ]]; then L="zh-CN ja es"; else
            L=""; [[ "$c" == *" zh"* ]] && L="$L zh-CN"; [[ "$c" == *" ja"* ]] && L="$L ja"; [[ "$c" == *" es"* ]] && L="$L es"
          fi
          L=$(echo $L | xargs); echo "languages=$L" >> $GITHUB_OUTPUT

      - name: Install deps for translator
        run: npm install @anthropic-ai/sdk --no-save --legacy-peer-deps

      - name: Run translation (internal)
        env:
          TRANSLATION_API_KEY: ${{ secrets.TRANSLATION_API_KEY }}
          TARGET_LANGUAGES: ${{ steps.parse.outputs.languages }}
        run: |
          [ -z "$TRANSLATION_API_KEY" ] && echo "missing key" && exit 1
          node .github/scripts/translate.js

      - name: Commit & push
        run: |
          git config user.email "action@github.com"
          git config user.name "GitHub Action Bot"
          if [ -n "$(git status --porcelain docs/)" ]; then
            git add docs/
            git commit -m "🌍 自动翻译文档" -m "Triggered by @${{ github.event.comment.user.login }}"
            git push
          else
            echo "No changes."
          fi

  # -------- 手动翻译（fork 分支，方案 B：直接 push 到贡献者分支） --------
  manual-translate-fork:
    if: |
      github.event_name == 'issue_comment' &&
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '/translate')
    runs-on: ubuntu-latest
    steps:
      - name: Read PR info
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const num = context.payload.issue.number;
            const { data: pr } = await github.rest.pulls.get({ owner, repo, pull_number: num });
            core.setOutput('is_fork', String(pr.head.repo.full_name !== `${owner}/${repo}`));
            core.setOutput('fork_full_name', pr.head.repo.full_name);
            core.setOutput('fork_owner', pr.head.repo.owner.login);
            core.setOutput('fork_repo', pr.head.repo.name);
            core.setOutput('fork_ref', pr.head.ref);
            core.setOutput('maintainer_can_modify', String(!!pr.maintainer_can_modify));

      - name: Only run for fork PR
        if: steps.pr.outputs.is_fork != 'true'
        run: echo "Not a fork PR, skip (handled by internal job)" && exit 0

      - name: Check commenter permission
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo, user=context.payload.comment.user.login;
            const { data: p } = await github.rest.repos.getCollaboratorPermissionLevel({ owner, repo, username:user });
            if (!['admin','maintain'].includes(p.permission)) {
              await github.rest.issues.createComment({ owner, repo, issue_number: context.payload.issue.number, body:`❌ @${user} 权限不足（需要 admin/maintain）`});
              core.setFailed('no permission');
            }

      - name: Ensure "Allow edits by maintainers" is enabled
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            if ('${{ steps.pr.outputs.maintainer_can_modify }}' !== 'true') {
              await github.rest.issues.createComment({
                owner, repo, issue_number: context.payload.issue.number,
                body: '⚠️ 需要作者在 PR 勾选 **Allow edits by maintainers**，否则无法将翻译结果推回你的分支。'
              });
              core.setFailed('maintainer_can_modify is false');
            }

      # 1) 检出你自己的仓库（只为获取受信任的脚本）
      - name: Checkout base repo (trusted code only)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: base

      # 2) 准备一个临时工作树，用 PAT 拉取贡献者 fork 的该分支
      - name: Prepare fork worktree
        env:
          TRANSLATION_PAT: ${{ secrets.TRANSLATION_PAT }}
        run: |
          set -e
          [ -z "$TRANSLATION_PAT" ] && echo "❌ TRANSLATION_PAT missing" && exit 1
          mkdir -p fork
          cd fork
          git init
          git config user.email "action@github.com"
          git config user.name "GitHub Action Bot"
          git remote add origin https://${TRANSLATION_PAT}@github.com/${{ steps.pr.outputs.fork_full_name }}.git
          git fetch --depth=1 origin ${{ steps.pr.outputs.fork_ref }}
          git checkout -b pr-branch FETCH_HEAD
          # 仅作为文件载体，不运行任何 fork 里的脚本

      - name: Setup Node.js (run trusted translator)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Parse translation command
        id: parse
        run: |
          c="${{ github.event.comment.body }}"
          if [[ "$c" == *"/translate all"* ]]; then L="zh-CN ja es"; else
            L=""; [[ "$c" == *" zh"* ]] && L="$L zh-CN"; [[ "$c" == *" ja"* ]] && L="$L ja"; [[ "$c" == *" es"* ]] && L="$L es"
          fi
          L=$(echo $L | xargs); echo "languages=$L" >> $GITHUB_OUTPUT

      - name: Install deps for translator
        working-directory: base
        run: npm install @anthropic-ai/sdk --no-save --legacy-peer-deps

      - name: Run translation against fork worktree
        env:
          TRANSLATION_API_KEY: ${{ secrets.TRANSLATION_API_KEY }}
          TARGET_LANGUAGES: ${{ steps.parse.outputs.languages }}
          WORKTREE_DIR: ${{ github.workspace }}/fork
        run: |
          set -e
          [ -z "$TRANSLATION_API_KEY" ] && echo "❌ 缺少 TRANSLATION_API_KEY" && exit 1
          # 进入可信代码目录执行脚本，但把 fork 工作树路径作为输入/输出位置
          cd base
          node .github/scripts/translate.js "$WORKTREE_DIR"

      - name: Commit & push back to contributor branch (PAT)
        env:
          TRANSLATION_PAT: ${{ secrets.TRANSLATION_PAT }}
        run: |
          set -e
          cd fork
          if [ -n "$(git status --porcelain docs/)" ]; then
            git add docs/
            git commit -m "🌍 自动翻译文档" -m "Triggered by @${{ github.event.comment.user.login }}"
            git push origin HEAD:${{ steps.pr.outputs.fork_ref }}
            echo "✅ Changes pushed to ${{ steps.pr.outputs.fork_full_name }}:${{ steps.pr.outputs.fork_ref }}"
          else
            echo "ℹ️ No docs changes to commit."
          fi

      - name: Leave result comment
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            await github.rest.issues.createComment({
              owner, repo, issue_number: context.payload.issue.number,
              body: '✅ 已将翻译结果直接推送到你的 PR 分支（fork）。如需撤回请告知维护者。'
            })

  # -------- 撤回（只针对同仓库分支；fork 的撤回通常由作者自行处理） --------
  rollback-translation:
    if: |
      github.event_name == 'issue_comment' &&
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/rollback translation')
    runs-on: ubuntu-latest
    steps:
      - name: Get PR info
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const { data: pr } = await github.rest.pulls.get({ owner, repo, pull_number: context.payload.issue.number });
            core.setOutput('is_fork', String(pr.head.repo.full_name !== `${owner}/${repo}`));
            core.setOutput('head_ref', pr.head.ref);

      - name: Stop for fork PR (ask author to rollback)
        if: steps.pr.outputs.is_fork == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            await github.rest.issues.createComment({
              owner, repo, issue_number: context.payload.issue.number,
              body: '⚠️ 当前为 fork PR，撤回请由作者在其分支上执行或关闭 PR。'
            });

      - name: Checkout (internal PR)
        if: steps.pr.outputs.is_fork != 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Rollback commit (internal PR)
        if: steps.pr.outputs.is_fork != 'true'
        run: |
          set -e
          git config user.email "action@github.com"
          git config user.name "GitHub Action Bot"
          # 这里可以根据你的元数据实现精准回滚；简化示例：撤销最近一次翻译提交
          last=$(git log --grep="🌍 自动翻译文档" --format=%H -n 1 || true)
          if [ -n "$last" ]; then
            git revert --no-edit "$last"
            git push
            echo "✅ Reverted $last"
          else
            echo "ℹ️ 未找到翻译提交，跳过"
          fi

  # -------- 合并后的小评论 --------
  post-merge-comment:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Comment after merge
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const pr = context.payload.pull_request;
            const body = `❤️ Great PR @${pr.user.login} ❤️`;
            await github.rest.issues.createComment({ owner, repo, issue_number: pr.number, body });
